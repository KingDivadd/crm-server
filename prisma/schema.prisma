datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
 
}

generator client {
  provider = "prisma-client-js"
}

model Company {
  company_id                              String           @id @default(uuid()) @unique
  company_ind                             String           @unique
  company_name                            String           
  company_address                         String?
  company_email                           String?
  company_phone                           Json             @default("[]")
  organization_size                       Int              @default(0)
  number_of_admin                         Int              @default(0)
  company_logo                            String?   

  user                                    User[]

  created_at                              Decimal
  updated_at                              Decimal
}

model User {
  user_id                                 String           @id @default(uuid()) @unique
  user_ind                                String           @unique

  // Basic user info
  last_name                               String           @default(value:"")
  first_name                              String           @default(value:"")
  other_names                             String           @default(value:"")
  user_role                               UserRole
  password                                String           
  email                                   String           @unique
  country_code                            String?          @default(value:"")
  phone_number                            String?          @default(value:"")
  is_verified                             Boolean          @default(false)
  active_status                           Boolean          @default(true)
  avatar                                  String?          @default(value:"")
  deleted                                 Boolean          @default(false)

  company                                 Company?         @relation(fields: [company_id], references: [company_id])
  company_id                              String?

  lead_adder                              Lead[]           @relation("lead_adder_ref")

  lead_designer                           Lead[]           @relation("lead_designer_ref")

  notification_source                     Notification[]   @relation("notification_source_ref")
  notification_to                         Notification[]   @relation("notification_to_ref")
  customer_invoice                        Invoice[]        @relation("customer_ref")
  ticket_creator                          ServiceTicket[]  @relation("ticket_creator_ref")
  ticket_assigner                         ServiceTicket[]  @relation("ticket_assigner_ref")
  ticket_assignee                         ServiceTicket[]  @relation("ticket_assignee_ref")
  user_tracking                           User_Tracking[]
  job_adder                               Job[]            @relation("job_adder_ref")
  payment                                 Payment[]
  invoice_adder                           Invoice[]        @relation("invoice_adder_ref")
  rfi_assigner                            RFI[]            @relation("rfi_assigner_ref")
  rfi_assignee                            RFI[]            @relation("rfi_assignee_ref")

  redLine_assigner                        RedLine[]        @relation("redLine_assigner_ref")
  redLine_assignee                        RedLine[]        @relation("redLine_assignee_ref")


  created_at                              Decimal
  updated_at                              Decimal
}

enum UserRole {
  super_admin
  admin
  sales
  operation
  installer
  designer
  permit
  electrical
  engineering
  customer
  accounting
}

model Lead {
  lead_id                                 String           @id @default(uuid()) @unique
  lead_ind                                String           @unique

  lead_adder                              User             @relation("lead_adder_ref", fields: [lead_adder_id], references: [user_id])
  lead_adder_id                           String

  lead_designer                           User             @relation("lead_designer_ref", fields: [lead_designer_id], references: [user_id])
  lead_designer_id                        String

// Customer info

  customer_first_name                     String
  customer_last_name                      String
  customer_state                          String?
  customer_zip                            Float?
  customer_city                           String?
  customer_address                        String?
  customer_phone                          String?
  customer_email                          String?  // required when dispostion is sold

  gate_code                               String?
  appointment_date                        Decimal
  disposition                             Disposition     @default(not_sold)
  desired_structure                       String?
  contract_document                       Json?            @default("[]")

  deleted                                 Boolean         @default(false)

  job                                     Job[]
  notification                            Notification[]

  created_at                              Decimal
  updated_at                              Decimal
}

enum Disposition {
  sold
  not_sold
}

model Job {
  job_id                                  String           @id @default(uuid()) @unique
  job_ind                                 String
  job_number                              String?

  lead                                    Lead             @relation(fields: [lead_id], references: [lead_id])
  lead_id                                 String

  job_adder                               User             @relation("job_adder_ref", fields: [job_adder_id], references: [user_id])
  job_adder_id                            String

  contract_amount                         Float
  contract_date                           Decimal
  email                                   String            @unique

  hoa_permit                              PermitStatus
  hoa_permit_submit_date                  Decimal?
  hoa_permit_approval_date                Decimal?
  hoa_permit_number                       String?
  hoa_permit_cost                         Float?
  hoa_permit_document                     Json?            @default("[]")

  engineering_permit                      PermitStatus
  engineering_permit_submit_date          Decimal?
  engineering_permit_approval_date        Decimal?
  engineering_permit_number               String?
  engineering_permit_cost                 Float?
  engineering_permit_document             Json?            @default("[]")

  general_permit                          PermitStatus
  general_permit_submit_date              Decimal?
  general_permit_approval_date            Decimal?
  general_permit_number                   String?
  general_permit_cost                     Float?
  general_permit_document                 Json?            @default("[]")

  notification                            Notification[]
  invoice                                 Invoice[]
  project                                 Project[]
  accounting                              Accounting[]
  user_tracking                           User_Tracking[]

  deleted                                 Boolean         @default(false)

  created_at                              Decimal
  updated_at                              Decimal
}

enum PermitStatus {
  not_required
  required
  submitted
  approved
}

model Project {
  project_id                              String           @id @default(uuid()) @unique
  project_ind                             String

  job                                     Job              @relation(fields: [job_id], references: [job_id])
  job_id                                  String

  attached                                String?
  structure_type                          String?
  cover_size                              String?
  end_cap_style                           String?
  cover_color                             String?
  trim_color                              String?

  project_details_and_instruction         Json?            @default("[]")
  regimented_photo_upload                 Json?            @default("[]")
  job_receipt_upload                      Json?            @default("[]")
  bill_sheets                             Json?            @default("[]")
  service_ticket_bill_sheets              Json?            @default("[]")
  
  paperwork_upload                        Json?            @default("[]")
  photo_upload                            Json?            @default("[]")
  engineering_drawing_upload              Json?            @default("[]")

  inspection_document                     Json?            @default("[]")
  inspection_date                         Decimal?           

  user_tracking                           User_Tracking[]
  notifications                           Notification[]
  install                                 Install[]
  tickets                                 ServiceTicket[]
  rif                                     RFI[]
  redline                                 RedLine[]


  created_at                              Decimal
  updated_at                              Decimal
}

model Install {
  install_id                              String           @id @default(uuid()) @unique
  install_ind                             String

  project                                 Project             @relation(fields: [project_id], references: [project_id])
  project_id                              String

  footing_date                            Float?
  footing_crew                            String?
  footing_bill_sheet                      String?

  set_post_date                           Float?
  set_post_crew                           String?
  set_post_bill_sheet                     String?

  demo_date                               Float?
  demo_crew                               String?
  demo_bill_sheet                         String?

  install_date                            Float?
  install_crew                            String?
  install_bill_sheet                      String?

  electrical_date                         Float?
  electrical_crew                         String?
  electrical_bill_sheet                   String?

  inspection_date                         Float?
  inspection_status                       InspStatus      @default(n_a)

  project_sign_off                        SignOffStatus   @default(pending)

  material                                Material[]


  created_at                              Decimal
  updated_at                              Decimal
}

enum SignOffStatus {
  pending
  in_progress
  completed
  closed
}

enum InspStatus {
  n_a
  pass
  fail
}

model Material {
  material_id                             String           @id @default(uuid()) @unique
  material_ind                            String

  install                                 Install             @relation(fields: [install_id], references: [install_id])
  install_id                              String

  material_description                    String?
  quantity                                Float            @default(1)
  material_cost                           Float
  material_received_date                  Decimal
  material_delivered_date                 Decimal

  created_at                              Decimal
  updated_at                              Decimal
}

model Invoice {
  invoice_id                              String          @id @default(uuid()) @unique
  invoice_ind                             String

  job                                     Job             @relation(fields: [job_id], references: [job_id])
  job_id                                  String

  invoice_adder                           User            @relation("invoice_adder_ref", fields: [invoice_adder_id], references: [user_id])
  invoice_adder_id                        String

  customer                                User            @relation("customer_ref", fields: [customer_id], references: [user_id])
  customer_id                             String

  invoice_type                            InvoiceType
  expenses_receipts                       Json?            @default("[]")
  gas                                     Json?            @default("[]")
  payment_receipt                         String?

  payment                                 Payment[]

  created_at                              Decimal
  updated_at                              Decimal
}

enum InvoiceType {
  duralum
  four_k
  js_service
  others
}

model Payment {
  payment_id                              String           @id @default(uuid()) @unique
  payment_ind                             String

  invoice                                 Invoice          @relation(fields: [invoice_id], references: [invoice_id])
  invoice_id                              String

  user                                    User          @relation(fields: [user_id], references: [user_id])
  user_id                                 String

  payment_phase                           PaymentPhase 

  amount                                  Float
  
  payment_method                          PaymentMethod @default(cash)

  created_at                              Decimal
  updated_at                              Decimal
}

enum PaymentPhase {
  deposit
  scheduling
  delivery
  construction_completion
  electrical_completion
}

enum PaymentMethod {
  cash
  credit_card
  check
  bank_transfer
}

model ServiceTicket {
  ticket_id                               String           @id @default(uuid()) @unique
  ticket_ind                              String

  ticket_status                           TicketStatus     @default(open)                                  

  ticket_creator                          User             @relation("ticket_creator_ref", fields: [ticket_creator_id], references: [user_id])
  ticket_creator_id                       String
  
  ticket_assigner                         User?            @relation("ticket_assigner_ref", fields: [ticket_assigner_id], references: [user_id])
  ticket_assigner_id                      String?
  
  ticket_assignee                         User?            @relation("ticket_assignee_ref", fields: [ticket_assignee_id], references: [user_id])
  ticket_assignee_id                      String?
  
  project                                 Project?         @relation(fields: [project_id], references: [project_id])
  project_id                              String?

  uploads                                 Json?            @default("[]")
  description                             String?

  user_tracking                           User_Tracking[]
  notification                            Notification[]

  created_at                              Decimal
  updated_at                              Decimal
}

enum TicketStatus {
  open
  assigned
  in_progress
  resolved
  closed
}

model Notification {
  notification_id                         String           @id @default(uuid()) @unique
  notification_ind                        String

  lead                                    Lead?            @relation(fields: [lead_id], references: [lead_id])
  lead_id                                 String?

  job                                     Job?             @relation(fields: [job_id], references: [job_id])
  job_id                                  String?

  project                                 Project?         @relation(fields: [project_id], references: [project_id])
  project_id                              String?

  ticket                                  ServiceTicket?   @relation(fields: [ticket_id], references: [ticket_id])
  ticket_id                               String?

  rfi                                     RFI?             @relation(fields: [rfi_id], references: [rfi_id])
  rfi_id                                  String?

  redLine                                 RedLine?         @relation(fields: [redLine_id], references: [redLine_id])
  redLine_id                              String?

  subject                                 String
  message                                 String
  notification_type                       NotificationType

  read                                    Boolean          @default(false)
  read_by                                 Json?            @default("[]")

  view_by_admin                           Boolean          @default(false)

  notification_source                     User?            @relation("notification_source_ref", fields: [notification_source_id], references: [user_id])
  notification_source_id                  String?

  notification_to                         User?            @relation("notification_to_ref", fields: [notification_to_id], references: [user_id])
  notification_to_id                      String?


  created_at                              Decimal
  updated_at                              Decimal
}

enum NotificationType {
  lead
  job
  project
  rfi
  redLine
  service_ticket
}

model Accounting {
  accounting_id                           String           @id @default(uuid()) @unique
  accounting_ind                          String

  job                                     Job             @relation(fields: [job_id], references: [job_id])
  job_id                                  String

  project_profit_loss                     Float?
  cost_per_project                        Float?
  profit_margin                           Float?
  loss                                    Float?
  bills_invoices                          Json?            @default("[]")
  payroll                                 Json?            @default("[]")

  google_calender_link                    String?
  lead_calender_link                      String?
  install_calender_link                   String?
  electrical_calender_link                String?


  created_at                              Decimal
  updated_at                              Decimal
}

model User_Tracking {
  tracking_id                             String           @id @default(uuid()) @unique
  tracking_ind                            String

  user                                    User         @relation(fields: [user_id], references: [user_id])
  user_id                                 String

  action_type                             ActionType 
  action_details                          Json?       // { "project_id": "123", "change_type": "added", "timestamp": "2024-08-31T12:00:00Z" }

  job                                     Job?         @relation(fields: [job_id], references: [job_id])
  job_id                                  String?

  project                                 Project?     @relation(fields: [project_id], references: [project_id])
  project_id                              String?

  service_ticket                          ServiceTicket? @relation(fields: [service_ticket_id], references: [ticket_id])
  service_ticket_id                       String?

  redLine                                 RedLine?         @relation(fields: [redLine_id], references: [redLine_id])
  redLine_id                              String?

  created_at                              Decimal
  updated_at                              Decimal
}

enum ActionType {
  login
  logout
  user_modification
  lead_modification
  job_modification
  project_modification
  ticket_modification
  rfi_modification
  redLine_modification
  photo_download
  service_ticket
}


model RFI {
  rfi_id                                  String           @id @default(uuid()) @unique
  rfi_ind                                 String
  
  rfi_assigner                            User?            @relation("rfi_assigner_ref", fields: [rfi_assigner_id], references: [user_id])
  rfi_assigner_id                         String?
  
  rfi_assignee                            User             @relation("rfi_assignee_ref", fields: [rfi_assignee_id], references: [user_id])
  rfi_assignee_id                         String 

  project                                 Project          @relation(fields: [project_id], references: [project_id])
  project_id                              String 

  description                             String

  due_date                                Decimal?

  status                                  RfiStatus        @default(open)

  response                                String?

  notification                            Notification[]

  created_at                              Decimal
  updated_at                              Decimal
}

enum RfiStatus {
  open
  in_progress
  closed
}

model RedLine {
  redLine_id                              String      @id @default(uuid()) @unique
  redLine_ind                             String

  redLine_assigner                        User        @relation("redLine_assigner_ref", fields: [redLine_assigner_id], references: [user_id])
  redLine_assigner_id                     String
  
  redLine_assignee                        User        @relation("redLine_assignee_ref", fields: [redLine_assignee_id], references: [user_id])
  redLine_assignee_id                     String 

  description                             String

  project                                 Project     @relation(fields: [project_id], references: [project_id])
  project_id                              String 

  status                                  RedLineStatus  @default(pending)

  userTracking                            User_Tracking[]
  notification                            Notification[]
  

  created_at                              Decimal
  updated_at                              Decimal
}

enum RedLineStatus {
  pending
  approved
  rejected
}