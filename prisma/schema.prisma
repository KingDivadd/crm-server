datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
 
}

generator client {
  provider = "prisma-client-js"
}

model Company {
  company_id                              String           @id @default(uuid()) @unique
  company_ind                             String       @unique
  company_name                            String           
  company_address                         String?
  company_email                           String?
  company_phone                           Json             @default("[]")
  organization_size                       Int              @default(value: 0)
  number_of_admin                         Int              @default(value: 0)
  company_logo                            String?   

  user                                    User[]


  created_at                              Decimal
  updated_at                              Decimal
}

model User {
  user_id                                 String           @id @default(uuid()) @unique
  user_ind                                String       @unique

  // Basic user info
  last_name                               String           @default(value: "")
  first_name                              String           @default(value: "")
  other_names                             String           @default(value: "")
  user_role                               String
  password                                String           
  email                                   String           @unique
  country_code                            String?          @default(value: "")
  phone_number                            String?          @default(value: "")
  is_verified                             Boolean          @default(false)
  active_status                           Boolean          @default(true)
  avatar                                  String?          @default(value: "")

  company                                 Company?         @relation(fields: [company_id], references: [company_id])
  company_id                              String?

  leads                                   Lead[]         @relation("Assigned_to")
  customer                                Lead[]         @relation("Customer")
  lead_adder                              Lead[]         @relation("LeadAdder")
  project_adder                           Project[]         @relation("ProjectAdder")
  job_adder                               Job[]         @relation("JobAdder")
  sales                                   Sale[]
  installations                           Installation[]
  activities                              Activity[]

  designers                               Designer[]
  created_by                              Service_Ticket[]     @relation("created_by")
  updated_by                              Service_Ticket[]     @relation("updated_by")
  task_notifications                      Task_Notification[]
  jobs                                    Job[]
  
  created_tasks                           Task[]    @relation("Created_Tasks")
  task_assigned                           Task[]    @relation("Task_Assigned")

  source                                  Notification[]    @relation("source")
  user                                    Notification[]    @relation("user")
  inspected_by                            Inspection[]      @relation("ProjectInspector")


  created_at                              Decimal
  updated_at                              Decimal
}


model Lead {
  lead_id                                 String           @id @default(uuid()) @unique
  lead_ind                                String       @unique
  customer_name                           String
  address                                 String?
  email                                   String?
  phone_number                            String?

  assigned_to                             User?       @relation("Assigned_to", fields: [assigned_to_id], references: [user_id])
  assigned_to_id                          String?

  customer                                User?       @relation("Customer", fields: [customer_id], references: [user_id])
  customer_id                             String?

  lead_adder                              User?         @relation("LeadAdder",fields: [lead_adder_id], references: [user_id])
  lead_adder_id                           String?

  gate_code                               String
  appointment_date                        String
  disposition                             Disposition
  job                                     Job[]
  sales                                   Sale[]
  designer                                Designer[]
  sales_Pipelines                         Sales_Pipeline[]
  notifications                           Notification[]


  created_at                              Decimal
  updated_at                              Decimal
}

enum Disposition {
  SOLD
  NOT_SOLD
  IN_PROGRESS
  LOST
}

model Sale {
  sale_id                                 String           @id @default(uuid()) @unique
  Sale_ind                                String       @unique

  lead                                    Lead?       @relation(fields: [lead_id], references: [lead_id])
  lead_id                                 String?

  user                                    User?       @relation(fields: [user_id], references: [user_id])
  user_id                                 String?
  
  designer                                Designer?       @relation(fields: [designer_id], references: [designer_id])
  designer_id                             String?

  sale_status                             Sale_Status     @default(PENDING)

  job_number                              String
  contract_amount                         Float
  contract_date                           String
  email                                   String
  hoa                                     Boolean
  hoa_sent_date                           String?
  hoa_approved_date                       String?
  project                                 Project[]
  notifications                           Notification[]
  payments                                Payment[]
  invoice                                 Invoice[]
  accounting                              Accounting[]
  job                                     Job[]

  created_at                              Decimal
  updated_at                              Decimal
}


enum Sale_Status{
  PENDING
  COMPLETED
  CANCELED
}

enum Structure_Type {
  IRP
  LATTICE
  COMBO
  FLAT_PAN
  LOUVER
  HYBRID
}


model Installation {
  installation_id                         String           @id @default(uuid()) @unique
  installation_ind                        String       @unique

  job                                     Job?        @relation(fields: [job_id], references: [job_id])
  job_id                                  String?

  user                                    User?        @relation(fields: [user_id], references: [user_id])
  user_id                                 String?

  installation_status                     Installation_Status     @default(PENDING)

  footings_date                           String?
  footings_crew                           String?
  footings_bill_sheet                     String?  // or any appropriate type
  set_post_date                           String?
  set_post_crew                           String?
  set_post_bill_sheet                     String?  // or any appropriate type
  demo_date                               String?
  demo_crew                               String?
  demo_bill_sheet                         String?  // or any appropriate type
  install_date                            String?
  install_crew                            String?
  install_bill_sheet                      String?  // or any appropriate type
  electrical_date                         String?
  electrical_crew                         String?
  electrical_bill_sheet                   String?  // or any appropriate type
  
  materials                               Material[]
  bill_sheets                             Bill_Sheet[]
  notifications                           Notification[]
  projects                                Project[]

  created_at                              Decimal
  updated_at                              Decimal
}

enum Installation_Status {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELED
}


model Inspection {
  inspection_id                           String      @id @default(uuid()) @unique
  inspection_ind                          String      @unique
  date                                    String
  pass                                    Boolean
  inspection_comments                     String?       
  inspection_type                         String      // Type of inspection (e.g., Initial, Final, Electrical)

  inspected_by                            User?         @relation("ProjectInspector", fields: [inspected_by_id], references: [user_id])
  inspected_by_id                         String?

  project                                 Project?         @relation(fields: [project_id], references: [project_id])
  project_id                              String?
  
  
  created_at                              Decimal
  updated_at                              Decimal
}


model Material {
  material_id                             String           @id @default(uuid()) @unique
  material_ind                            String       @unique
  description                             String
  cost                                    Float
  received_date                           String?
  delivered_to_customer_date              String?

  installation                            Installation?      @relation(fields: [installation_id], references: [installation_id])
  installation_id                         String?

  created_at                              Decimal
  updated_at                              Decimal
}

model Bill_Sheet {
  bill_sheet_id                           String           @id @default(uuid()) @unique
  bill_sheet_ind                          String       @unique
  description                             String
  cost                                    Float
  installation                            Installation?      @relation(fields: [installation_id], references: [installation_id])
  installation_id                         String?

  created_at                              Decimal
  updated_at                              Decimal
}

model Payment {
  payment_id                              String           @id @default(uuid()) @unique
  payment_ind                             String       @unique
  phase                                   Payment_Phase
  amount                                  Float
  date                                    String
  payment_status                          Payment_Status     @default(PENDING)
  
  job                                     Job?       @relation(fields: [job_id], references: [job_id])
  job_id                                  String?

  sale                                    Sale?      @relation(fields: [sale_id], references: [sale_id])
  sale_id                                 String?

  created_at                              Decimal
  updated_at                              Decimal
}

enum Payment_Phase {
  DEPOSIT
  SCHEDULING
  DELIVERY
  CONSTRUCTION_COMPLETION
  ELECTRICAL_COMPLETION
}

enum Payment_Status {
  PENDING
  COMPLETED
  FAILED
}

model Invoice {
  invoice_id                              String           @id @default(uuid()) @unique
  invoice_ind                             String       @unique
  vendor                                  Vendor
  amount                                  Float
  date                                    String
  job_number                              String
  receipt                                 String

  job                                     Job?       @relation(fields: [job_id], references: [job_id])
  job_id                                  String?

  sale                                    Sale?      @relation(fields: [sale_id], references: [sale_id])
  sale_id                                 String?

  accounting                              Accounting?      @relation(fields: [accounting_id], references: [accounting_id])
  accounting_id                           String?

  created_at                              Decimal
  updated_at                              Decimal
}

enum Vendor {
  DURALUM
  FOUR_K
  JS_SERVICES
  OTHER
}

model Designer {
  designer_id                             String           @id @default(uuid()) @unique
  designer_ind                            String       @unique

  user                                    User?       @relation(fields: [user_id], references: [user_id])
  user_id                                 String?


  lead                                    Lead?       @relation(fields: [lead_id], references: [lead_id])
  lead_id                                 String?

  
  sales                                   Sale[]
  notifications                           Notification[]
  contract_docs                           Contract_Doc[]

  created_at                              Decimal
  updated_at                              Decimal
}

model Contract_Doc {
  contract_doc_id                         String           @id @default(uuid()) @unique
  contract_doc_ind                        String       @unique
  file_path                               String

  designer                                Designer?     @relation(fields: [designer_id], references: [designer_id])
  designer_id                             String?

  created_at                              Decimal
  updated_at                              Decimal
}

model Notification {
  notification_id                         String           @id @default(uuid()) @unique
  notification_ind                        String       @unique

  subject                                 String
  message                                 String
  read                                    Boolean  @default(false)

  source                                  User?     @relation("source", fields: [source_id], references: [user_id])
  source_id                               String?

  user                                    User?     @relation("user", fields: [user_id], references: [user_id])
  user_id                                 String?

  sale                                    Sale?     @relation(fields: [sale_id], references: [sale_id])
  sale_id                                 String?

  lead                                    Lead?     @relation(fields: [lead_id], references: [lead_id])
  lead_id                                 String?

  task                                    Task?     @relation(fields: [task_id], references: [task_id])
  task_id                                 String?

  job                                     Job?     @relation(fields: [job_id], references: [job_id])
  job_id                                  String?

  project                                 Project?     @relation(fields: [project_id], references: [project_id])
  project_id                              String?

  designer                                Designer?     @relation(fields: [designer_id], references: [designer_id])
  designer_id                             String?

  installation                            Installation?      @relation(fields: [installation_id], references: [installation_id])
  installation_id                         String?



  created_at                              Decimal
  updated_at                              Decimal
}

model Task_Notification {
  task_notification_id                    String           @id @default(uuid()) @unique
  task_notification_ind                    String       @unique
  message                                 String?
  read                                    Boolean          @default(false)
  task_type                               Task_Type
  due_date                                String?
  task_notification_status                Task_Notification_Status

  user                                    User?            @relation(fields: [user_id], references: [user_id])
  user_id                                 String?

  assigned_to                             String?
  note                                    String?

  job                                     Job?             @relation(fields: [job_id], references: [job_id])
  job_id                                  String?

  created_at                              Decimal
  updated_at                              Decimal
}

enum Task_Notification_Status {
  PENDING
  IN_PROGRESS
  COMPLETED
  OVERDUE
}

enum Task_Type {
  HOA_APPROVAL
  ENGINEERING_APPROVAL
  PERMIT_APPROVAL
  INSTALLATION_SCHEDULE
  PAYMENT_DUE
}

model Accounting {
  accounting_id                           String           @id @default(uuid()) @unique
  accounting_ind                          String       @unique

  project                                 Sale?       @relation(fields: [sale_id], references: [sale_id])
  sale_id                                 String?
  profit_loss                             Float
  average_cost                            Float
  profit_margins                          Float
  losses                                  Float
  invoices                                Invoice[]


  created_at                              Decimal
  updated_at                              Decimal
}


model Service_Ticket {
  service_ticket_id                       String               @id @default(uuid()) @unique
  service_ticket_ind                      String               @unique
  description                             String
  status                                  Service_Ticket_Status @default(OPEN)
  
  project                                 Project?             @relation(fields: [project_id], references: [project_id])
  project_id                              String?              
  
  created_by                              User?                @relation("created_by", fields: [created_by_id], references: [user_id])
  created_by_id                           String?              
  
  updated_by                              User?                @relation("updated_by", fields: [updated_by_id], references: [user_id])
  updated_by_id                           String?              
  
  image_url                               String?              // Optional URL for the uploaded image
  
  created_at                              Decimal
  updated_at                              Decimal
}

enum Service_Ticket_Status {
  OPEN
  IN_PROGRESS
  CLOSED
}

model Activity {
  activity_id                             String           @id @default(uuid()) @unique
  activity_ind                            String       @unique
  user                                    User?     @relation(fields: [user_id], references: [user_id])
  user_id                                 String?
  action                                  String
  details                                 String

  job                                     Job?       @relation(fields: [job_id], references: [job_id])
  job_id                                  String?

  created_at                              Decimal
  updated_at                              Decimal
}

model Job {
  job_id                                  String      @id @default(uuid()) @unique
  job_ind                                 String       @unique

  lead                                    Lead?       @relation(fields: [lead_id], references: [lead_id])
  lead_id                                 String?

  sale                                    Sale?      @relation(fields: [sale_id], references: [sale_id])
  sale_id                                 String?

  customer                                User?      @relation(fields: [customer_id], references: [user_id])
  customer_id                             String?

  job_adder                               User?         @relation("JobAdder",fields: [job_adder_id], references: [user_id])
  job_adder_id                            String?

  contract_amount                         Float
  contract_date                           String
  email                                   String?

  // HOA Permit Field
  hoa_permit_status                       PermitStatus @default(PENDING)
  hoa_permit_submit_date                  String?
  hoa_permit_approval_date                String?
  hoa_permit_documents                    Json?            @default("[]")

  // Engineering Permit Field
  engineering_permit_status               PermitStatus @default(PENDING)
  engineering_permit_submit_date          String?
  engineering_permit_approval_date        String?
  engineering_permit_documents            Json?            @default("[]")
  

  // Electrical Permit Field
  electrical_permit_status                PermitStatus @default(PENDING)
  electrical_permit_submit_date           String?
  electrical_permit_approval_date         String?
  electrical_permit_documents             Json?            @default("[]")

  // General Permit Field
  general_permit_status                   PermitStatus?
  general_permit_submit_date              String?
  general_permit_approval_date            String?
  general_permit_documents                Json?            @default("[]")

  permit_number                           String?    @default(value: "")
  cover_color                             String?
  cover_size                              String?
  attached                                Boolean       @default(false)
  
  project                                 Project[]
  payments                                Payment[]
  invoices                                Invoice[]
  activities                              Activity[]
  installations                           Installation[]
  task_notifications                      Task_Notification[]
  tasks                                   Task[]
  sales_Pipelines                         Sales_Pipeline[]
  notifications                           Notification[]


  created_at                              Decimal
  updated_at                              Decimal
}

enum PermitStatus {
  REJECTED
  SUBMITTED
  APPROVED
  NOT_REQUIRED
  PENDING
}

model Task {
  task_id                                 String      @id @default(uuid()) @unique
  task_ind                                String       @unique

  description                             String?
  task_assigned_to                        User?      @relation("Task_Assigned", fields: [task_assigned_to_id], references: [user_id])
  task_assigned_to_id                     String?
  status                                  Task_Status  @default(PENDING)
  start_date                              String?
  due_date                                String?
  completion_date                         String?
  note                                    String?

  // Relationships

  created_by                              User?      @relation("Created_Tasks", fields: [created_by_id], references: [user_id])
  created_by_id                           String?

  job                                     Job?      @relation(fields: [job_id], references: [job_id])
  job_id                                  String?
  notifications                           Notification[]


  created_at                              Decimal
  updated_at                              Decimal
}

enum Task_Status {
  PENDING
  IN_PROGRESS
  COMPLETED
}

model Project {
  project_id                              String      @id @default(uuid()) @unique
  project_ind                             String      @unique
  
  job                                     Job        @relation(fields: [job_id], references: [job_id])
  job_id                                  String

  sale                                    Sale?       @relation(fields: [sale_id], references: [sale_id])
  sale_id                                 String?

  progress_tracker                        Installation? @relation(fields: [progress_tracker_id], references: [installation_id])
  progress_tracker_id                     String?

  project_adder                           User?         @relation("ProjectAdder", fields: [project_adder_id], references: [user_id])
  project_adder_id                        String?

  attached                                Boolean       @default(false)
  structure_type                          StructureType
  description                             String?
  cover_size                              String?
  end_cap_style                           String?
  cover_color                             String?
  trim_color                              String?

  status                                  ProjectStatus   @default(PENDING)

  // Contract Details
  contract_amount                         Float?
  contract_date                           String?

  permit_number                           String?

  // Document Attachments
  attachments                             Attachment[]  @relation("ProjectAttachments")
  sales_Pipelines                         Sales_Pipeline[]
  notifications                           Notification[]
  service_tickets                         Service_Ticket[]
  inspections                             Inspection[]

  created_at                              Decimal
  updated_at                              Decimal
}

enum ProjectStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  ON_HOLD
  CANCELLED
}

model Attachment {
  attachment_id                           String      @id @default(uuid()) @unique
  attachment_ind                            String       @unique

  project                                 Project     @relation("ProjectAttachments", fields: [project_id], references: [project_id])
  project_id                              String
  file_url                                String
  
  created_at                              Decimal
  updated_at                              Decimal
}

enum StructureType {
  IRP
  LATTICE
  COMBO
  FLAT_PAN
  LOUVER
  HYBRID
  OTHER
}



model Sales_Pipeline {
  pipeline_id                             String       @id @default(uuid()) @unique
  pipeline_ind                            String       @unique

  lead                                    Lead?        @relation(fields: [lead_id], references: [lead_id])
  lead_id                                 String?      // Reference to Lead

  job                                     Job?         @relation(fields: [job_id], references: [job_id])
  job_id                                  String?

  project                                 Project?         @relation(fields: [project_id], references: [project_id])
  project_id                              String?

  
  disposition                             Disposition? // Enum for Sold/Not Sold/Other dispositions
  
  contract_amount                         Float?      // Contract amount for the deal
  
  project_type                            String?       // Type of project (e.g., Freestanding, Lattice)
  status                                  SalesStatus?  // Enum to track the sales pipeline status (e.g., In Progress, Sold, Lost)
  
  notes                                   Note[]       // Array of notes for additional tracking or comments
  
  created_at                              Decimal
  updated_at                              Decimal
}

enum SalesStatus {
  INITIAL_CONTACT
  NEGOTIATION
  SOLD
  LOST
}

model Note {
  note_id                                 String          @id @default(uuid()) @unique
  content                                 String

  pipeline                                Sales_Pipeline? @relation(fields: [pipeline_id], references: [pipeline_id])
  pipeline_id                             String?

  created_at                              Decimal
  updated_at                              Decimal
}
